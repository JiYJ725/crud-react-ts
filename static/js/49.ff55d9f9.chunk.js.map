{"version":3,"file":"static/js/49.ff55d9f9.chunk.js","mappings":"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","sources":["components/UI/Button.tsx","components/UI/Card.tsx","components/features/Cart/CartItem.tsx","components/features/Cart/Cart.tsx","components/features/Shop/ProductItem.tsx","components/features/Shop/Products.tsx","pages/ShopPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\ninterface IButton {\n  backgroundColor?: string;\n  color?: string;\n  fontSize?: string;\n  borderColor?: string;\n  bold?: string;\n  paddingSize?: string;\n  disabled?: boolean;\n  isClick?: boolean;\n}\n\nconst Button = styled.button<IButton>`\n  background-color: ${({theme, backgroundColor}) =>\n          (backgroundColor && theme.mode[backgroundColor]) || theme.mode.defaultButtonBackground};\n  color: ${({theme, color}) => (color && theme.mode[color]) || theme.mode.defaultButtonColor};\n  font-size: ${({theme, fontSize}) => (fontSize && theme.fontSizes[fontSize]) || theme.fontSizes.md};\n  font-weight: ${({bold}) => (bold ? \"bold\" : \"normal\")};\n  pointer-events: ${({disabled}) => (disabled ? \"none\" : \"auto\")};\n  cursor: ${({disabled}) => (disabled ? \"not-allowed\" : \"pointer\")};\n  opacity: ${({disabled}) => (disabled ? 0.3 : 1)};\n  border-radius: 10px;\n  border: 1px solid ${({\n                         theme,\n                         borderColor\n                       }) => (borderColor && theme.mode[borderColor]) || theme.mode.defaultButtonColor};\n  text-align: center;\n  padding: ${({paddingSize}) => (paddingSize ? paddingSize : \"10px 25px\")};\n  height: 100%;\n\n  &:hover,\n  &:active {\n    background: ${({theme}) => theme.mode.hover};\n    border-color: ${({theme}) => theme.mode.hover};\n  }\n\n`;\n\nexport default Button;\n","import React from \"react\";\nimport styled from 'styled-components';\n\n\nconst Card = styled.section`\n  margin: 1rem auto;\n  border-radius: 6px;\n  background-color: ${({theme}) => theme.mode.background};\n  padding: 1rem;\n  width: 90%;\n  max-width: 40rem;\n`;\n\n\nexport default Card;\n\n","import {useDispatch} from \"react-redux\";\nimport {cartActions} from \"../../../store/cart-slice\";\n\nimport styled from \"styled-components\";\nimport Button from \"../../UI/Button\";\nimport {Text} from \"../../UI/Text\";\n\n\ninterface Props {\n  id: string;\n  title: string;\n  quantity: number;\n  total: number;\n  price: number;\n}\n\nconst CartItem = ({id, title, quantity, total, price}: Props) => {\n  const dispatch = useDispatch();\n\n  const removeItemHandler = () => {\n    dispatch(cartActions.removeItemFromCart(id));\n  }\n\n  const addItemHandler = () => {\n    dispatch(cartActions.addItemToCart({\n      id,\n      title,\n      price\n    }))\n  }\n\n  return (\n    <StyledCartItem>\n      <header>\n        <h3>{title}</h3>\n        <div className=\"price\">\n          ${total.toFixed(2)}{' '}\n          <span className='item-price'>(${price.toFixed(2)}/item)</span>\n        </div>\n      </header>\n      <div className=\"details\">\n        <div className=\"quantity\">\n          x <span>{quantity}</span>\n        </div>\n        <div className=\"actions\">\n          <Button onClick={removeItemHandler}><Text>-</Text></Button>\n          <Button onClick={addItemHandler}><Text>+</Text></Button>\n        </div>\n      </div>\n    </StyledCartItem>\n  )\n}\n\nexport default CartItem;\n\nconst StyledCartItem = styled.li`\n  margin: 1rem 0;\n  background-color: ${({theme}) => theme.mode.backgroundSub};\n  padding: 1rem;\n\n  h3 {\n    margin: 0 0 0.5rem 0;\n    font-size: 1.75rem;\n  }\n\n  header {\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n  }\n\n  .details {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .quantity span {\n    font-size: 1.5rem;\n    font-weight: bold;\n  }\n\n  .price {\n    font-size: 1.5rem;\n    font-width: bold;\n  }\n\n  .item-price {\n    font-weight: normal;\n    font-size: 1rem;\n    font-style: italic;\n  }\n\n  .actions {\n    display: flex;\n    justify-content: flex-end;\n    margin: 0.5rem 0;\n  }\n\n  .actions Button {\n    background-color: transparent;\n    border: 1px solid ${({theme}) => theme.mode.border};\n    margin-left: 0.5rem;\n    padding: 0.15rem 1rem;\n    color: white;\n  }\n\n  .actions Button:hover,\n  .actions Button:active {\n    background-color: ${({theme}) => theme.mode.background};\n    color: white;\n  }\n`\n\n\n","import {useSelector} from 'react-redux';\n\nimport styled from 'styled-components';\nimport Card from \"../../UI/Card\";\nimport CartItem from './CartItem';\nimport {ReducerType} from \"../../../store\";\n\nconst Cart = () => {\n  const cartItems = useSelector((state: ReducerType) => state.cart.items)\n  return (\n    <StyledCart>\n      <h2>Your Shopping Cart</h2>\n      <ul>\n        {cartItems.map((item) => (\n          <CartItem\n            key={item.id}\n            id={item.id}\n            title={item.name}\n            quantity={item.quantity}\n            total={item.totalPrice}\n            price={item.price}/>\n        ))}\n      </ul>\n    </StyledCart>\n  )\n}\n\nexport default Cart;\n\nconst StyledCart = styled(Card)`\n  max-width: 30rem;\n  color: ${({theme}) => theme.mode.primaryText};\n\n  h2 {\n    font-size: 1.25rem;\n    margin: 0.5rem 0;\n  }\n\n  ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n`\n","import styled from 'styled-components';\nimport Card from '../../UI/Card';\nimport Button from \"../../UI/Button\";\nimport {Text} from \"../../UI/Text\";\nimport {useDispatch} from \"react-redux\";\nimport {cartActions} from \"../../../store/cart-slice\";\n\ninterface Props {\n  id: string;\n  title: string;\n  price: number;\n  description: string;\n}\n\nconst ProductItem = ({id, title, price, description}: Props) => {\n  const dispatch = useDispatch();\n  const addToCartHandler = () => {\n    dispatch(cartActions.addItemToCart({\n      id,\n      title,\n      price,\n    }));\n  };\n\n  return (\n    <li>\n      <StyledProductItem>\n        <header>\n          <h3>{title}</h3>\n          <div className=\"price\"><Text>${price.toFixed(2)}</Text></div>\n        </header>\n        <p><Text>{description}</Text></p>\n        <div className=\"actions\">\n          <Button onClick={addToCartHandler}>Add to Cart</Button>\n        </div>\n      </StyledProductItem>\n    </li>\n  );\n}\n\nexport default ProductItem;\n\nconst StyledProductItem = styled(Card)`\n  h3 {\n    margin: 0.5rem 0;\n    font-size: 1.25rem;\n    color: ${({theme}) => theme.mode.primaryText};\n  }\n\n  header {\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n  }\n\n  .price {\n    border-radius: 30px;\n    padding: 0.5rem 1.5rem;\n    background-color: ${({theme}) => theme.mode.backgroundSub};\n    border: ${({theme}) => theme.mode.border};\n  }\n\n  .price span {\n    font-size: 1.5rem;\n  }\n\n  p {\n    color: #3a3a3a;\n    margin: 2rem auto;\n  }\n\n  .actions {\n    display: flex;\n    justify-content: flex-end;\n  }\n`\n\n","import styled from 'styled-components';\nimport ProductItem from \"./ProductItem\";\n\nconst DUMMY_PRODUCTS = [\n  {\n    id         : 'p1',\n    price      : 6,\n    title      : 'My first book',\n    description: 'The first book I ever wrote'\n  },\n  {\n    id         : 'p2',\n    price      : 22,\n    title      : 'My second book',\n    description: 'The second book I ever wrote'\n  },\n  {\n    id         : 'p3',\n    price      : 13,\n    title      : 'My third book',\n    description: 'The third book I ever wrote'\n  }\n]\n\nconst Products = () => {\n  return (\n    <StyledProducts>\n      <h2>Buy your favorite products</h2>\n      <ul>\n        {DUMMY_PRODUCTS.map(product => (\n          <ProductItem\n            key={product.id}\n            id={product.id}\n            title={product.title}\n            price={product.price}\n            description={product.description}\n          />\n        ))}\n      </ul>\n    </StyledProducts>\n  );\n};\n\nexport default Products;\n\nconst StyledProducts = styled.section`\n  h2 {\n    color: ${({theme}) => theme.mode.primaryText};\n    margin: 2rem auto;\n    text-align: center;\n    text-transform: uppercase;\n    font-size: 1.5rem;\n    font-weight: bold;\n  }\n\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n`\n","import {useSelector, useDispatch} from \"react-redux\";\n\nimport Cart from \"../components/features/Cart/Cart\";\nimport Products from \"../components/features/Shop/Products\";\nimport Button from \"../components/UI/Button\";\n\n\nimport {ReducerType} from \"../store\";\nimport {uiActions} from \"../store/ui-slice\";\n\nconst ShopPage = () => {\n  const dispatch = useDispatch();\n  const cartQuantity = useSelector((state: ReducerType) => state.cart.totalQuantity);\n  const toggleCartHandler = () => {\n    dispatch(uiActions.toggle());\n  };\n\n\n  const showCart = useSelector((state: ReducerType) => state.ui.cartIsVisible);\n  return (\n    <>\n      <div><Button onClick={toggleCartHandler}>My Cart {cartQuantity}</Button></div>\n      {showCart && <Cart/>}\n      <Products/>\n    </>\n  );\n}\n\nexport default ShopPage;\n"],"names":["Button","styled","theme","backgroundColor","mode","defaultButtonBackground","color","defaultButtonColor","fontSize","fontSizes","md","bold","disabled","borderColor","paddingSize","hover","background","id","title","quantity","total","price","dispatch","useDispatch","StyledCartItem","className","toFixed","onClick","cartActions","Text","backgroundSub","border","cartItems","useSelector","state","cart","items","StyledCart","map","item","name","totalPrice","Card","primaryText","description","StyledProductItem","DUMMY_PRODUCTS","StyledProducts","product","cartQuantity","totalQuantity","showCart","ui","cartIsVisible","uiActions"],"sourceRoot":""}