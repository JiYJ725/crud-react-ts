{"version":3,"file":"static/js/901.e6a20571.chunk.js","mappings":"qHAaMA,E,OAASC,GAAAA,OAAH,8VACU,gBAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,gBAAT,OACXA,GAAmBD,EAAME,KAAKD,IAAqBD,EAAME,KAAKC,uBADnD,IAEX,gBAAEH,EAAF,EAAEA,MAAOI,EAAT,EAASA,MAAT,OAAqBA,GAASJ,EAAME,KAAKE,IAAWJ,EAAME,KAAKG,kBAA/D,IACI,gBAAEL,EAAF,EAAEA,MAAOM,EAAT,EAASA,SAAT,OAAwBA,GAAYN,EAAMO,UAAUD,IAAcN,EAAMO,UAAUC,EAAlF,IACE,qBAAEC,KAAkB,OAAS,QAA7B,IACG,qBAAEC,SAA0B,OAAS,MAArC,IACR,qBAAEA,SAA0B,cAAgB,SAA5C,IACC,qBAAEA,SAA0B,GAAM,CAAlC,IAES,gBAAEV,EAAF,EAAEA,MAAOW,EAAT,EAASA,YAAT,OAA2BA,GAAeX,EAAME,KAAKS,IAAiBX,EAAME,KAAKU,KAAjF,IAET,gBAAEC,EAAF,EAAEA,YAAF,OAAoBA,GAA4B,WAAhD,IAKK,qBAAEb,MAAiBE,KAAKY,KAAxB,IACE,qBAAEd,MAAiBE,KAAKY,KAAxB,IAKpB,K,iJCKA,EA/BgB,WACd,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAUC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAwBA,EAAMF,QAAQG,KAAtC,IACtBC,GAAOH,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAwBA,EAAMF,QAAQK,WAAtC,IAEnBC,EAAe,SAACC,GACpBT,EAASU,EAAAA,EAAAA,QAAuBC,OAAOF,EAAEG,cAAcP,QACxD,EAOD,OACE,UAACQ,EAAD,YACE,SAACC,EAAA,EAAD,CAAMvB,SAAS,KAAf,gCACCe,IAAQ,gBAAKS,UAAU,QAAf,UAAuB,SAACD,EAAA,EAAD,CAAMvB,SAAS,MAAMyB,WAAW,YAAhC,SAA6Cd,OAC7E,4BACE,SAACnB,EAAA,EAAD,CAAQsB,OAAQ,EAAGY,QAAS,SAAAC,GAAK,OAAIV,EAAaU,EAAjB,EAAyB3B,SAAS,KAAnE,8BACA,SAACR,EAAA,EAAD,CAAQsB,MAAO,EAAGY,QAAS,SAAAC,GAAK,OAAIV,EAAaU,EAAjB,EAAyB3B,SAAS,KAAlE,+BAEF,4BACE,SAACR,EAAA,EAAD,CAAQsB,OAAQ,EAAGY,QAAS,SAAAC,GAAK,OAAIV,EAAaU,EAAjB,EAAyB3B,SAAS,KAAnE,wBACA,SAACR,EAAA,EAAD,CAAQsB,MAAO,EAAGY,QAAS,SAAAC,GAAK,OAAIV,EAAaU,EAAjB,EAAyB3B,SAAS,KAAlE,2BAEF,SAACR,EAAA,EAAD,CAAQkC,QAhBiB,WAC3BjB,EAASU,EAAAA,EAAAA,gBACV,EAcG,8BAGL,EAIKG,EAAgB7B,EAAAA,GAAAA,KAAH,ofASG,qBAAEC,MAAiBE,KAAKgC,UAAxB,IACA,qBAAElC,MAAiBE,KAAKiC,MAAxB,IC7CtB,EALoB,WAClB,OACE,SAAC,EAAD,GAEH,C","sources":["style/Button.tsx","components/Counter.tsx","views/CounterPage.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\ninterface IButton {\n  backgroundColor?: string;\n  color?: string;\n  fontSize?: string;\n  borderColor?: string;\n  bold?: string;\n  paddingSize?: string;\n  disabled?: boolean;\n  isClick?: boolean;\n}\n\nconst Button = styled.button<IButton>`\n  background-color: ${({theme, backgroundColor}) =>\n          (backgroundColor && theme.mode[backgroundColor]) || theme.mode.defaultButtonBackground};\n  color: ${({theme, color}) => (color && theme.mode[color]) || theme.mode.defaultButtonColor};\n  font-size: ${({theme, fontSize}) => (fontSize && theme.fontSizes[fontSize]) || theme.fontSizes.md};\n  font-weight: ${({bold}) => (bold ? \"bold\" : \"normal\")};\n  pointer-events: ${({disabled}) => (disabled ? \"none\" : \"auto\")};\n  cursor: ${({disabled}) => (disabled ? \"not-allowed\" : \"pointer\")};\n  opacity: ${({disabled}) => (disabled ? 0.3 : 1)};\n  border-radius: 10px;\n  border: 1px solid ${({theme, borderColor}) => (borderColor && theme.mode[borderColor]) || theme.mode.gray2};\n  text-align: center;\n  padding: ${({paddingSize}) => (paddingSize ? paddingSize : \"10px 15px\")};\n  height: 100%;\n\n  &:hover,\n  &:active {\n    background: ${({theme}) => theme.mode.hover};\n    border-color: ${({theme}) => theme.mode.hover};\n  }\n\n`;\n\nexport default Button;\n","import React from \"react\";\nimport {useSelector, useDispatch} from 'react-redux';\n\nimport {counterActions} from '../store/counter'\nimport {ReducerType} from \"../store\";\n\nimport styled from \"styled-components\";\nimport Button from \"../style/Button\";\nimport {Text} from \"../style/Text\";\n\nconst Counter = () => {\n  const dispatch = useDispatch();\n  const counter = useSelector((state: ReducerType) => state.counter.value);\n  const show = useSelector((state: ReducerType) => state.counter.showCounter);\n\n  const countHandler = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    dispatch(counterActions.counter(Number(e.currentTarget.value)));\n  }\n\n\n  const toggleCounterHandler = () => {\n    dispatch(counterActions.toggleCounter());\n  };\n\n  return (\n    <StyledCounter>\n      <Text fontSize=\"lg\">Redux Counter Test</Text>\n      {show && <div className=\"value\"><Text fontSize=\"xxl\" fontWeight=\"extraBold\">{counter}</Text></div>}\n      <div>\n        <Button value={-5} onClick={event => countHandler(event)} fontSize=\"sm\">Decrement by -5</Button>\n        <Button value={5} onClick={event => countHandler(event)} fontSize=\"sm\">Increase by 5</Button>\n      </div>\n      <div>\n        <Button value={-1} onClick={event => countHandler(event)} fontSize=\"sm\">Decrement</Button>\n        <Button value={1} onClick={event => countHandler(event)} fontSize=\"sm\">Increment</Button>\n      </div>\n      <Button onClick={toggleCounterHandler}>Toggle Counter</Button>\n    </StyledCounter>\n  );\n};\n\nexport default Counter;\n\nconst StyledCounter = styled.main`\n  margin: 5rem auto;\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.2);\n  width: 90%;\n  max-width: 40rem;\n\n  border-radius: 8px;\n  padding: 1rem;\n  text-align: center;\n  background-color: ${({theme}) => theme.mode.background};\n  border: 1px solid ${({theme}) => theme.mode.border};\n\n  & h1 {\n    text-transform: uppercase;\n    color: #575757;\n    margin: 0;\n    font-size: 1rem;\n  }\n\n  .value {\n    font-size: 2rem;\n    color: #3c0080;\n    margin: 2rem 0;\n    font-weight: bold;\n  }\n\n  Button {\n    margin: 0.3rem;\n  }\n`\n","import Counter from \"../components/Counter\";\nimport React from \"react\";\n\nconst CounterPage = () => {\n  return (\n    <Counter/>\n  )\n}\nexport default CounterPage;\n"],"names":["Button","styled","theme","backgroundColor","mode","defaultButtonBackground","color","defaultButtonColor","fontSize","fontSizes","md","bold","disabled","borderColor","gray2","paddingSize","hover","dispatch","useDispatch","counter","useSelector","state","value","show","showCounter","countHandler","e","counterActions","Number","currentTarget","StyledCounter","Text","className","fontWeight","onClick","event","background","border"],"sourceRoot":""}